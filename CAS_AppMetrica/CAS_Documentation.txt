Внедрение CAS:
	1) Добавить плагин CAS
	2) Assets -> CAS -> Settings (IOS или Android):
		CAS Manager ID's (Bundle ID) установить значение bundle id из консоли CAS
		Banner ad format = YES
		Interstitial ad format = YES
		Rewarded ad format = YES

		Mediation Solutions: OptimalAds
	3) Добавить Prefab AdManager.prefab и Init AdManager.prefab в проект, затем добавить AdManager.prefab на сцену
	4) В Publishing Settings:
		Custom Main Gradle Template = YES
		Custom Gradle Properties = YES
		Custom Gradle Settings Template = YES
	5) Interstitial реклама вызывается следующим образом:
		AdManager.Instance.OnInterstitialClosed = EVENT; // Вместо EVENT вставить свой метод, который будет обрабатываться после закрытия рекламы
		AdManager.Instance.ShowInterstitial(); // Показ Interstitial рекламы
	6) Rewarded реклама вызывается следующим образом:
		AdManager.Instance.OnRewardEvent = EVENT; // Вместо EVENT вставить свой метод, который начисляют награду игроку
		AdManager.Instance.ShowRewarded(); // Показ Rewarded рекламы



Внедрение AppMetrica:
	1) В Packages/manifest.json добавить:
		{
		  "dependencies": {
		    "com.google.external-dependency-manager": "https://github.com/google-unity/external-dependency-manager.git#1.2.177",
		    "io.appmetrica.analytics": "https://github.com/appmetrica/appmetrica-unity-plugin.git#v6.2.0"
		  }
		}
	2) Создать скрипт AppMetricaActivator.cs:
		using Io.AppMetrica;
		using UnityEngine;

		public static class AppMetricaActivator {
		    [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		    private static void Activate() {
		        AppMetrica.Activate(new AppMetricaConfig("APIKey") {
		            FirstActivationAsUpdate = !IsFirstLaunch(),
		        });
		    }

		    private static bool IsFirstLaunch() {
		        // Implement logic to detect whether the app is opening for the first time.
		        // For example, you can check for files (settings, databases, and so on),
		        // which the app creates on its first launch.
		        return true;
		    }
		}